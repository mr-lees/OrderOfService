/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package OrderOfService;

/**
 *
 * @author natha
 */
public class AddTagToSong extends javax.swing.JFrame {

    /**
     * Creates new form AddTag
     */
    public AddTagToSong() {
        initComponents();
    }
    
    /**
     * Method that checks for a record with a particular ID
     * @param Table is the table name
     * @param ID is the ID that is being checked for
     * @return 
     */
    public boolean checkIDs(String Table, String ID) {
        boolean exists = false;
        String table = Table;
        String id = ID;
        String SQLStatement = "";
        int thisError = 0;
        
        //Create the SQL Statement
        if(table.equals("`Songs`") && id.isEmpty() == false) {
            SQLStatement = "select COUNT(*) from `Songs` where `SongID` = " + id;
        }
        else if(table.equals("`Tags`") && id.isEmpty() == false) {
            SQLStatement = "select COUNT(*) from `Tags` where `TagID` = " + id;
        }
        else {
            UserMessageBox myMessage = new UserMessageBox();
            myMessage.setTitle("Error");
            myMessage.setMessage("Error with code - presence check has not been performed");
            myMessage.setVisible(true);
        }
        
        //Run SQL if not empty
        if(SQLStatement.isEmpty() == false) {
            //Run the SQL Statement
            OrderOfServiceMain.dbObject.sqlString = SQLStatement;
            thisError = OrderOfServiceMain.dbObject.getCountBySelect();
        
            if(OrderOfServiceMain.dbObject.NumberOfRecords == 1) {
                exists = true;
            }
        }
        
        return exists;
    }
    
    
    /**
     * Method that adds the song-tag to the database
     */
    public void AddSongTagToDatabase() {
        boolean error = false;
        int thisError = 0;
        String SQLStatement = "";
        
        //Check to see if the user has given an input for the SongID text field
        if(tfSongID.getText().length() <= 0) {
            error = true;
        }
        
        //Check to see if the user has given an input for the TagID text field
        if(tfTagID.getText().length() <= 0) {
            error = true;
        }
        
        if(error == false) {
            boolean songExists;
            boolean tagExists;
            //Check to see if the inputs given exist
            songExists = checkIDs("`Songs`", tfSongID.getText());
            tagExists = checkIDs("`Tags`", tfTagID.getText());
            
            if(songExists == false) {
                UserMessageBox myMessage = new UserMessageBox();
                myMessage.setTitle("Error");
                myMessage.setMessage("The inputted song does not exist");
                myMessage.setVisible(true);
            }
            
            if(tagExists == false) {
                UserMessageBox myMessage = new UserMessageBox();
                myMessage.setTitle("Error");
                myMessage.setMessage("The inputted tag does not exist");
                myMessage.setVisible(true);
            }
            
            if(songExists == true && tagExists == true) {
                //Make the correct SQL statement
                SQLStatement = "insert into `SongTags` (`SongID`, `TagID`) values ('" + tfSongID.getText() + "'"
                        + ", '" + tfTagID.getText() + "')";
                
                
                //Add the Speaker to the database
                OrderOfServiceMain.dbObject.sqlString = SQLStatement;
                OrderOfServiceMain.dbObject.insertRecord();
            
                if(thisError == 0) {
                    UserMessageBox myMessage = new UserMessageBox();
                    myMessage.setTitle("Success!");
                    myMessage.setMessage("The link has been made between the Song and Tag!");
                    myMessage.setVisible(true);
                }
            }
        }
        else {
            //Inform the user of an input error
            UserMessageBox myMessage = new UserMessageBox();
                myMessage.setTitle("Error!");
                myMessage.setMessage("There has been an error with the inputs. \n"
                        + "Please make sure that you have: \n"
                        + "1. Entered a SongID \n"
                        + "2. Entered a TagID");
                myMessage.setVisible(true);
        }
        
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lTitle = new javax.swing.JLabel();
        bSubmit = new javax.swing.JButton();
        lLogo = new javax.swing.JLabel();
        lSongID = new javax.swing.JLabel();
        tfSongID = new javax.swing.JTextField();
        bExit = new javax.swing.JButton();
        tfTagID = new javax.swing.JTextField();
        lTagID = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("GWBC Order of Service Manager - Add Tag To Song");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(218, 227, 243));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(68, 114, 196), 2));

        lTitle.setFont(new java.awt.Font("Calibri", 3, 36)); // NOI18N
        lTitle.setForeground(new java.awt.Color(31, 56, 100));
        lTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lTitle.setText("GWBC Add Tag To Song");

        bSubmit.setBackground(new java.awt.Color(180, 199, 231));
        bSubmit.setFont(new java.awt.Font("Calibri Light", 1, 16)); // NOI18N
        bSubmit.setForeground(new java.awt.Color(31, 56, 100));
        bSubmit.setText("Submit Song-Tag");
        bSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSubmitActionPerformed(evt);
            }
        });

        lLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OrderOfService/GWBC Logo.png"))); // NOI18N

        lSongID.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        lSongID.setForeground(new java.awt.Color(31, 56, 100));
        lSongID.setText("Enter SongID:");

        tfSongID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfSongIDKeyTyped(evt);
            }
        });

        bExit.setBackground(new java.awt.Color(180, 199, 231));
        bExit.setFont(new java.awt.Font("Calibri Light", 1, 16)); // NOI18N
        bExit.setForeground(new java.awt.Color(31, 56, 100));
        bExit.setText("Exit to Menu");
        bExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExitActionPerformed(evt);
            }
        });

        tfTagID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfTagIDKeyTyped(evt);
            }
        });

        lTagID.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        lTagID.setForeground(new java.awt.Color(31, 56, 100));
        lTagID.setText("Enter TagID:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lSongID)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(tfSongID, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(bExit, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lLogo))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lTagID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfTagID, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSongID, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lSongID))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTagID, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lTagID))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bExit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lLogo)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Action Listener for exit button
     * Disposes the form, but doesn't stop the main application
     * @param evt 
     */
    private void bExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExitActionPerformed
        dispose();
    }//GEN-LAST:event_bExitActionPerformed

    /**
     * Action Listener for Submit button
     * Runs the AddSongTagToDatabase method
     * @param evt 
     */
    private void bSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSubmitActionPerformed
        AddSongTagToDatabase();
    }//GEN-LAST:event_bSubmitActionPerformed

    /**
     * Type check - ensures input is a number
     * Length check - ensures ID is no longer than 11 digits
     * @param evt 
     */
    private void tfSongIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSongIDKeyTyped
        char inChar = evt.getKeyChar();
        
        if(Character.isDigit(inChar) == false || tfSongID.getText().length() == 11) {
            evt.consume();
        }
    }//GEN-LAST:event_tfSongIDKeyTyped

    /**
     * Type check - ensures that input is numeric
     * Length check - ensures ID is no longer than 11 digits
     * @param evt 
     */
    private void tfTagIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTagIDKeyTyped
        char inChar = evt.getKeyChar();
        
        if(Character.isDigit(inChar) == false || tfTagID.getText().length() == 11) {
            evt.consume();
        }
    }//GEN-LAST:event_tfTagIDKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddTagToSong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddTagToSong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddTagToSong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddTagToSong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddTagToSong().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bExit;
    private javax.swing.JButton bSubmit;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lLogo;
    private javax.swing.JLabel lSongID;
    private javax.swing.JLabel lTagID;
    private javax.swing.JLabel lTitle;
    private javax.swing.JTextField tfSongID;
    private javax.swing.JTextField tfTagID;
    // End of variables declaration//GEN-END:variables
}
